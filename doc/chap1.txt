  
  [1X1 [33X[0;0YIntroduction[133X[101X
  
  [33X[0;0YThis chapter serves as an introduction to the package [5XProgressBar[105X.[133X
  
  [33X[0;0YThe  main purpose of this package is to display the progression of a process
  in  the  terminal via a progress bar that refreshes in the screen after each
  step of the process.[133X
  
  
  [1X1.1 [33X[0;0YExample: Loop[133X[101X
  
  [33X[0;0YIn  the  first  example we show the simplest use case of the package, namely
  displaying the process of a loop.[133X
  
  [33X[0;0YBefore  the  start  of  a process we call [11XStartProcess[111X, where we specify the
  number  of steps needed to terminate. Then after the completion of each step
  we call [11XUpdateProcess[111X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XLoadPackage("ProgressBar");;[127X[104X
    [4X[25Xgap>[125X [27XdoLoop := function(n)[127X[104X
    [4X[25X>[125X [27X     local i;[127X[104X
    [4X[25X>[125X [27X     StartProcess(n);;[127X[104X
    [4X[25X>[125X [27X     for i in [1 .. n] do[127X[104X
    [4X[25X>[125X [27X       Sleep(1);[127X[104X
    [4X[25X>[125X [27X       UpdateProcess();[127X[104X
    [4X[25X>[125X [27X     od;[127X[104X
    [4X[25X>[125X [27X   end;;[127X[104X
    [4X[25Xgap>[125X [27XdoLoop(7);[127X[104X
    [4X[28X [===================================================] 100% | 7/7 | eta 0:00:00[128X[104X
  [4X[32X[104X
  
  [33X[0;0YIn  the  above  example  we might encounter the following outputs during the
  execution  of  the iteration. All these outputs are visible in the same line
  of the terminal for roughly 1 second.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X [=======--------------------------------------------]  14% | 1/7 | eta 0:00:06[128X[104X
    [4X[28X [=====================------------------------------]  42% | 3/7 | eta 0:00:04[128X[104X
    [4X[28X [====================================---------------]  71% | 5/7 | eta 0:00:02[128X[104X
    [4X[28X [===================================================] 100% | 7/7 | eta 0:00:00[128X[104X
  [4X[32X[104X
  
  
  [1X1.2 [33X[0;0YExample: Process with Steps[133X[101X
  
  [33X[0;0YApart from displaying loops, the package can be used to display the progress
  during  the  execution  of a function as well. We disable the display of eta
  (expected  time  of  arrival/completion),  since  it  is meaningless in this
  context.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XLoadPackage("ProgressBar");;[127X[104X
    [4X[25Xgap>[125X [27XdoSteps := function()[127X[104X
    [4X[25X>[125X [27X     local proc, opts;[127X[104X
    [4X[25X>[125X [27X     opts := rec(printETA := false);[127X[104X
    [4X[25X>[125X [27X     proc := StartProcess(3, fail, "Process", "Doing Step 1", opts);;[127X[104X
    [4X[25X>[125X [27X     Sleep(2);[127X[104X
    [4X[25X>[125X [27X     UpdateProcess(proc, "Doing Step 2", opts);[127X[104X
    [4X[25X>[125X [27X     Sleep(4);[127X[104X
    [4X[25X>[125X [27X     UpdateProcess(proc, "Doing Step 3", opts);[127X[104X
    [4X[25X>[125X [27X     Sleep(2);[127X[104X
    [4X[25X>[125X [27X     UpdateProcess(proc, "Finished", opts);[127X[104X
    [4X[25X>[125X [27X   end;;[127X[104X
    [4X[25Xgap>[125X [27XdoSteps();[127X[104X
    [4X[28X | Finished[128X[104X
    [4X[28X [=================================================================] 100% | 3/3[128X[104X
  [4X[32X[104X
  
  [33X[0;0YIn  the  above  example  we  would  see  the  following  outputs  before the
  termination of the process, each displayed in the same lines of the screen.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X | Doing Step 1[128X[104X
    [4X[28X [-----------------------------------------------------------------]   0% | 0/3[128X[104X
    [4X[28X[128X[104X
    [4X[28X | Doing Step 2[128X[104X
    [4X[28X [=====================--------------------------------------------]  33% | 1/3[128X[104X
    [4X[28X[128X[104X
    [4X[28X | Doing Step 3[128X[104X
    [4X[28X [===========================================----------------------]  66% | 2/3[128X[104X
  [4X[32X[104X
  
  
  [1X1.3 [33X[0;0YExample: Nested Loop[133X[101X
  
  [33X[0;0YThe  package  also  supports  displaying  nested  loops. For this we need to
  specify  the parent-child relationships of the individual processes. We also
  adjust the display to show the total execution time of the root process.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XLoadPackage("ProgressBar");;[127X[104X
    [4X[25Xgap>[125X [27XdoNestedLoop := function(n, m)[127X[104X
    [4X[25X>[125X [27X     local loop1, loop2, i, j;[127X[104X
    [4X[25X>[125X [27X     SetDisplayOptionsForProgressBar(rec(printTotalTime := true));[127X[104X
    [4X[25X>[125X [27X     loop1 := StartProcess(n, fail, "Outer Loop");;[127X[104X
    [4X[25X>[125X [27X     for i in [1 .. n] do[127X[104X
    [4X[25X>[125X [27X       loop2 := StartProcess(m, loop1, "Inner Loop");;[127X[104X
    [4X[25X>[125X [27X       for j in [1 .. m] do[127X[104X
    [4X[25X>[125X [27X         Sleep(1);[127X[104X
    [4X[25X>[125X [27X         UpdateProcess(loop2);[127X[104X
    [4X[25X>[125X [27X       od;[127X[104X
    [4X[25X>[125X [27X       UpdateProcess(loop1);[127X[104X
    [4X[25X>[125X [27X     od;[127X[104X
    [4X[25X>[125X [27X   end;;[127X[104X
    [4X[25Xgap>[125X [27XdoNestedLoop(3, 5);[127X[104X
    [4X[28X | Total Time 0:00:17[128X[104X
    [4X[28X [===================================================] 100% | 3/3 | eta 0:00:00[128X[104X
  [4X[32X[104X
  
  [33X[0;0YAn example output might look like this[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X | Total Time 0:00:07[128X[104X
    [4X[28X [=================----------------------------------]  33% | 1/3 | eta 0:00:11[128X[104X
    [4X[28X   [===================------------------------------]  40% | 2/5 | eta 0:00:03[128X[104X
  [4X[32X[104X
  
  
  [1X1.4 [33X[0;0YExample: Tree[133X[101X
  
  [33X[0;0YWe  can  also display much more intertwined processes than nested loops. For
  this  it  is  recommended  to  use [11XDeclareProcess[111X to define all parent-child
  relationships of the individual processes before the root process starts. We
  can  then  use  [11XStartProcess[111X  with  the  id  or process record to start each
  process.[133X
  
  [33X[0;0YAdditionaly, we use some display options to disable removing a child process
  when it terminates, and to highlight the current process that is running.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XLoadPackage("ProgressBar");;[127X[104X
    [4X[25Xgap>[125X [27XdoTree := function(n, l, m, r)[127X[104X
    [4X[25X>[125X [27X     local root, left, leftInner, i, j, k;[127X[104X
    [4X[25X>[125X [27X     SetDisplayOptionsForProgressBar(rec([127X[104X
    [4X[25X>[125X [27X       printTotalTime := true,[127X[104X
    [4X[25X>[125X [27X       removeChildren := false,[127X[104X
    [4X[25X>[125X [27X       highlightCurStep := true[127X[104X
    [4X[25X>[125X [27X     ));[127X[104X
    [4X[25X>[125X [27X     # Declare Process Tree[127X[104X
    [4X[25X>[125X [27X     root := DeclareProcess(n, fail, "Root", "Root");;[127X[104X
    [4X[25X>[125X [27X     left := DeclareProcess(l, root, "left", "Left");;[127X[104X
    [4X[25X>[125X [27X     leftInner := DeclareProcess(m, "left", "leftInner", "Inner");;[127X[104X
    [4X[25X>[125X [27X     DeclareProcess(r, root, "right", "Right");;[127X[104X
    [4X[25X>[125X [27X     # Start Process[127X[104X
    [4X[25X>[125X [27X     StartProcess(root);;[127X[104X
    [4X[25X>[125X [27X     for i in [1 .. n] do[127X[104X
    [4X[25X>[125X [27X       StartProcess(left);;[127X[104X
    [4X[25X>[125X [27X       for j in [1 .. l] do[127X[104X
    [4X[25X>[125X [27X         Sleep(1);[127X[104X
    [4X[25X>[125X [27X         StartProcess(leftInner);;[127X[104X
    [4X[25X>[125X [27X         for k in [1.. m] do[127X[104X
    [4X[25X>[125X [27X           Sleep(1);[127X[104X
    [4X[25X>[125X [27X           UpdateProcess(leftInner);[127X[104X
    [4X[25X>[125X [27X         od;[127X[104X
    [4X[25X>[125X [27X         UpdateProcess(left);[127X[104X
    [4X[25X>[125X [27X       od;[127X[104X
    [4X[25X>[125X [27X       StartProcess("right");;[127X[104X
    [4X[25X>[125X [27X       for j in [1 .. r] do[127X[104X
    [4X[25X>[125X [27X         Sleep(1);[127X[104X
    [4X[25X>[125X [27X         UpdateProcess("right");[127X[104X
    [4X[25X>[125X [27X       od;[127X[104X
    [4X[25X>[125X [27X       UpdateProcess(root);[127X[104X
    [4X[25X>[125X [27X     od;[127X[104X
    [4X[25X>[125X [27X   end;;[127X[104X
    [4X[25Xgap>[125X [27XdoTree(3, 5, 2, 4);[127X[104X
    [4X[28X | Total Time 0:01:06[128X[104X
    [4X[28X | Root[128X[104X
    [4X[28X [===================================================] 100% | 3/3 | eta 0:00:00[128X[104X
    [4X[28X    | Left[128X[104X
    [4X[28X    [------------------------------------------------]   0% | 0/5 | eta ?:??:??[128X[104X
    [4X[28X    |  | Inner[128X[104X
    [4X[28X    |  [---------------------------------------------]   0% | 0/2 | eta ?:??:??[128X[104X
    [4X[28X    | Right[128X[104X
    [4X[28X    [------------------------------------------------]   0% | 0/4 | eta ?:??:??[128X[104X
  [4X[32X[104X
  
  [33X[0;0YExample output during the execution of the function:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X | Total Time 0:00:42[128X[104X
    [4X[28X | Root[128X[104X
    [4X[28X [=================----------------------------------]  33% | 1/3 | eta 0:00:43[128X[104X
    [4X[28X    | Left[128X[104X
    [4X[28X    [================================================] 100% | 5/5 | eta 0:00:00[128X[104X
    [4X[28X    |  | Inner[128X[104X
    [4X[28X    |  [---------------------------------------------]   0% | 0/2 | eta ?:??:??[128X[104X
    [4X[28X    | Right[128X[104X
    [4X[28X    [====================================------------]  75% | 3/4 | eta 0:00:01[128X[104X
  [4X[32X[104X
  
